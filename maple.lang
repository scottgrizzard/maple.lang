<?xml version="1.0" encoding="UTF-8"?>
<!--

 This file defines the Maple language for GtkSourceView

 Author: Scott Grizzard <sgrizzar@mail.usf.edu>
 Copyright (C) 2017 Scott Grizzard <sgrizzar@mail.usf.edu>
 -->
 
 <language id="maple" _name="Maple" version="2.0" _section="Scientific">
    <metadata>
        <property name="mimetypes">text/x-maple</property>
        <property name="globs">*.mpl;*.maple</property>
        <property name="line-comment-start">#</property>
        <property name="block-comment-start">(*</property>
        <property name="block-comment-end">*)</property>
    </metadata>
    
    <styles>
        <style id="comment"				_name="Comment"				map-to="def:comment"/>
        <style id="string"				_name="String"				map-to="def:string"/>
		<style id="escaped-character" 	_name="Escaped Character"   map-to="def:special-char"/>
        <style id="keyword"				_name="Keyword"				map-to="def:keyword"/>
        <style id="null-value"			_name="Null Value"			map-to="def:special-constant"/>
        <style id="boolean"				_name="Boolean value"		map-to="def:boolean"/>
        <style id="number"				_name="Number"				map-to="def:decimal"/>
        <style id="function"			_name="Function"			map-to="def:function"/>
        <style id="special-constant"	_name="Special Constant"	map-to="def:special-constant"/>
        <style id="assignment-operator" _name="Assignment Operator"	map-to="def:operator"/>
        <style id="builtin"				_name="Builtin"				map-to="def:builtin"/>
		<style id="type"				_name="Data Type"			map-to="def:type"/>
		<style id="reserved-classes"	_name="Reserved Class"		map-to="def:type"/>
		<style id="reserved-modules"	_name="Reserved Modules"	map-to="def:type"/>
		<style id="included-file"		_name="Included File"		map-to="def:string"/>
		<style id="preprocessor"		_name="Preprocessor"		map-to="def:preprocessor"/>
		<style id="scope-declaration" 	_name="Scope Declaration"   map-to="def:keyword"/>
		<style id="special-functions"	_name="Special Functions"	map-to="def:builtin" />
		<style id="magic-comment"		_name="Magic Comments"		map-to="def:doc-comment-element"/>
		<style id="control-start"		_name="Control Start"		map-to="def:keyword"/>
		<style id="control-middle"		_name="Control Middle"		map-to="def:keyword"/>
		<style id="control-end"			_name="Control End"			map-to="def:keyword"/>
		<style id="operator"			_name="Operators"			map-to="def:operator"/>
		<style id="error"				_name="Error"				map-to="def:error"/>
		<style id="boolean-evaluations" _name="Boolean Evaluations" map-to="def:keyword"/>
    </styles>
    
    <definitions>
		<context id="control-start" style-ref="control-start">
			<keyword>if</keyword>
			<keyword>do</keyword>
			<keyword>try</keyword>
			<keyword>for</keyword>
			<keyword>while</keyword>
		</context>
		
		<context id="control-middle" style-ref="control-middle">
			<keyword>then</keyword>
			<keyword>else</keyword>
			<keyword>elif</keyword>
			<keyword>catch</keyword>
		</context>
		
		<context id="control-end" style-ref="control-end">
			<keyword>end if</keyword>
			<keyword>end do</keyword>
			<keyword>end</keyword>
			<keyword>od</keyword>
			<keyword>fi</keyword>
			<keyword>end try</keyword>
		</context>
		
		<context id="magic-comment" style-ref="magic-comment">
			<keyword>author</keyword>
			<keyword>todo</keyword>
			<keyword>requires</keyword>
			<keyword>var</keyword>
			<keyword>TODO</keyword>
		</context>
		
		<!-- Unsorted Keywords -->
		<context id="keyword" style-ref="keyword">
			<keyword>module</keyword>
			<keyword>proc</keyword>
			<keyword>error</keyword>
			<keyword>done</keyword>
			<keyword>use</keyword>
			<keyword>break</keyword>
			<keyword>return</keyword>
		</context>
		
        <context id="block-comment" style-ref="comment" class="comment"
                 class-disabled="no-spell-check">
          <start>\(\*</start>
          <end>\*\)</end>
          <include>
            <context ref="def:in-comment"/>
            <context ref="magic-comment"/>
          </include>
        </context>

        <context id="line-comment" style-ref="comment" end-at-line-end="true"
                 class="comment">
          <start>#</start>
          <include>
            <context ref="def:in-comment"/>
            <context ref="magic-comment"/>
          </include>
        </context>

		<context id="close-comment-outside-comment" style-ref="error">
		  <match>\*\)</match>
		</context>
		
		<define-regex id="escaped-character" extended="true">
			  \\(               # leading backslash
			  [\\\"\'nrbtf] |   # escaped character
			  [0-9]{1,3}    |   # latin encoded char
			  u[0-9]{1,4}   |   # unicode char
			  e\[[0-9]{1,2}m	# ANSI Escape codes
			  )
		</define-regex>


		
		<context id="operator" style-ref="operator">
			<keyword>:\-</keyword>
			<keyword>\*</keyword>
			<keyword>\+</keyword>
			<keyword>\.</keyword>
			<keyword>::</keyword>
		</context>
		
		<context id="string" style-ref="string" end-at-line-end="true" class="string" class-disabled="no-spell-check">
			<start>"</start>
			<end>"</end>
			<include>
				<context id="escaped-character" style-ref="escaped-character">
					<match>\%{escaped-character}</match>
				</context>
			</include>
		</context>
		
        <context id="special-constants" style-ref="special-constant">
          <keyword>Pi</keyword>
          <keyword>I</keyword>
          <keyword>Catalan</keyword>
          <keyword>gamma</keyword>
          <keyword>infinity</keyword>
        </context>

        <context id="boolean" style-ref="boolean">
          <keyword>FALSE</keyword>
          <keyword>TRUE</keyword>
          <keyword>false</keyword>
          <keyword>true</keyword>
          <keyword>FAIL</keyword>
        </context>
        
<!--        <context id="boolean-evaluations" style-ref="boolean-evaluations">
			<keyword>and</keyword>
			<keyword>or</keyword>
			<keyword>not</keyword>
			<keyword>&#61;</keyword>
			<keyword>&lt;</keyword>
			<keyword>&gt;</keyword>
        </context>-->
        
        <define-regex id="boolean-eval" extended="true">
				(
				[\=\!&lt;&gt;]	| #one of the normal operators
				\sand\s	|			#and
				\sor\s				#or
				)
		</define-regex>
		<context id="boolean-evaluations" style-ref="boolean-evaluations" extend-parent="false">
		  <match>\%{boolean-eval}</match>
		</context>        
		<context id="assignment-operator" style-ref="assignment-operator">
		  <match>:=</match>
		</context>

		<context id="reserved-classes" style-ref="reserved-classes">
			<keyword>Matrix</keyword>
			<keyword>Vector</keyword>
			<keyword>Array</keyword>
			<keyword>Matrix</keyword>
			<keyword>Vector\[column\]</keyword>
			<keyword>Vector\[row\]</keyword>
		</context>
		
		<context id="type" style-ref="type">
			<keyword>string</keyword>
			<keyword>expseq</keyword>
			<keyword>float</keyword>
			<keyword>fraction</keyword>
			<keyword>function</keyword>
			<keyword>integer</keyword>
			<keyword>list</keyword>
			<keyword>symbol</keyword>
			<keyword>posint</keyword>
			<keyword>boolean</keyword>
			<keyword>arithmetic</keyword>
			<keyword>complex</keyword>
			<keyword>constant</keyword>
			<keyword>diffop</keyword>
			<keyword>ditto</keyword>
			<keyword>emptysymbol</keyword>
			<keyword>implies</keyword>
			<keyword>minus</keyword>
			<keyword>set</keyword>
			<keyword>subset</keyword>
			<keyword>uneval</keyword>
			<keyword>unio</keyword>
		</context>
		
		<context id="reserved-modules" style-ref="reserved-modules">
			<keyword>algcurves</keyword>
			<keyword>Algebraic</keyword>
			<keyword>ArrayTools</keyword>
			<keyword>AudioTools</keyword>
			<keyword>Bits</keyword>
			<keyword>CAD</keyword>
			<keyword>codegen</keyword>
			<keyword>CodeGeneration</keyword>
			<keyword>CodeTools</keyword>
			<keyword>combinat</keyword>
			<keyword>combstruct</keyword>
			<keyword>ContextMenu</keyword>
			<keyword>CUDA</keyword>
			<keyword>CurveFitting</keyword>
			<keyword>Database</keyword>
			<keyword>DEtools</keyword>
			<keyword>DifferentialAlgebra</keyword>
			<keyword>DifferentialGeometry</keyword>
			<keyword>difforms</keyword>
			<keyword>DiscreteTransforms</keyword>
			<keyword>DocumentTools</keyword>
			<keyword>Domains</keyword>
			<keyword>DynamicSystems</keyword>
			<keyword>ExcelTools</keyword>
			<keyword>ExternalCalling</keyword>
			<keyword>FileTools</keyword>
			<keyword>GaussInt</keyword>
			<keyword>genfunc</keyword>
			<keyword>geom3d</keyword>
			<keyword>geometry</keyword>
			<keyword>gfun</keyword>
			<keyword>GlobalOptimization</keyword>
			<keyword>GraphTheory</keyword>
			<keyword>Grid</keyword>
			<keyword>Groebner</keyword>
			<keyword>group</keyword>
			<keyword>hashmset</keyword>
			<keyword>heap</keyword>
			<keyword>HTTP</keyword>
			<keyword>ImageTools</keyword>
			<keyword>InstallerBuilder</keyword>
			<keyword>IntegerRelations</keyword>
			<keyword>IntegrationTools</keyword>
			<keyword>inttrans</keyword>
			<keyword>LargeExpressions</keyword>
			<keyword>LibraryTools</keyword>
			<keyword>liesymm</keyword>
			<keyword>LinearAlgebra</keyword>
			<keyword>LinearFunctionalSystems</keyword>
			<keyword>LinearOperators</keyword>
			<keyword>ListTools</keyword>
			<keyword>Logic</keyword>
			<keyword>LREtools</keyword>
			<keyword>Magma</keyword>
			<keyword>Maplets</keyword>
			<keyword>MathematicalFunctions</keyword>
			<keyword>MathML</keyword>
			<keyword>Matlab</keyword>
			<keyword>MatrixPolynomialAlgebra</keyword>
			<keyword>MmaTranslator</keyword>
			<keyword>MTM</keyword>
			<keyword>MultiSeries</keyword>
			<keyword>numapprox</keyword>
			<keyword>numtheory</keyword>
			<keyword>Optimization</keyword>
			<keyword>Ore_algebra</keyword>
			<keyword>OreTools</keyword>
			<keyword>OrthogonalSeries</keyword>
			<keyword>orthopoly</keyword>
			<keyword>padic</keyword>
			<keyword>PDEtools</keyword>
			<keyword>Physics</keyword>
			<keyword>plots</keyword>
			<keyword>plottools</keyword>
			<keyword>PolynomialIdeals</keyword>
			<keyword>PolynomialTools</keyword>
			<keyword>powseries</keyword>
			<keyword>priqueue</keyword>
			<keyword>ProcessControl</keyword>
			<keyword>QDifferenceEquations</keyword>
			<keyword>queue</keyword>
			<keyword>RandomTools</keyword>
			<keyword>RationalNormalForms</keyword>
			<keyword>RealDomain</keyword>
			<keyword>RegularChains</keyword>
			<keyword>RootFinding</keyword>
			<keyword>ScientificConstants</keyword>
			<keyword>ScientificErrorAnalysis</keyword>
			<keyword>Security</keyword>
			<keyword>simplex</keyword>
			<keyword>Slode</keyword>
			<keyword>SNAP</keyword>
			<keyword>symbolic-</keyword>
			<keyword>Sockets</keyword>
			<keyword>SoftwareMetrics</keyword>
			<keyword>SolveTools</keyword>
			<keyword>Spread</keyword>
			<keyword>stack</keyword>
			<keyword>Statistics</keyword>
			<keyword>StringTools</keyword>
			<keyword>Student</keyword>
			<keyword>Student[Calculus1]</keyword>
			<keyword>Student[LinearAlgebra]</keyword>
			<keyword>Student[MultivariateCalculus]</keyword>
			<keyword>Student[NumericalAnalysis]</keyword>
			<keyword>Student[Precalculus]</keyword>
			<keyword>Student[VectorCalculus]</keyword>
			<keyword>SumTools</keyword>
			<keyword>sumtools</keyword>
			<keyword>tensor</keyword>
			<keyword>Threads</keyword>
			<keyword>Tolerances</keyword>
			<keyword>Typesetting</keyword>
			<keyword>TypeTools</keyword>
			<keyword>Units</keyword>
			<keyword>VariationalCalculus</keyword>
			<keyword>VectorCalculus</keyword>
			<keyword>Worksheet</keyword>
			<keyword>XMLTools</keyword>
		</context>
		
        <context id="include" style-ref="preprocessor">
          <match>^(\s)*read(\s)*\(\".*\"\);</match>
          <include>
            <context id="included-file"
                     sub-pattern="1"
                     style-ref="included-file"/>
          </include>
        </context>
        
		<context id="scope-declaration" style-ref="scope-declaration">
		  <keyword>local</keyword>
		  <keyword>export</keyword>
		  <keyword>static</keyword>
		  <keyword>description</keyword>
		  <keyword>option</keyword>
		</context>
		
		<context id="special-functions" style-ref="special-functions">
			<keyword>ModuleCopy</keyword>
			<keyword>ModulePrint</keyword>
			<keyword>ModuleApply</keyword>
		</context>
        
        <context id="maple">
          <include>
			<context ref="def:shebang"/> <!-- include the hashbang definition for maple shell scripts. -->
			<context ref="block-comment" />
            <context ref="special-constants"/>
            <context ref="boolean"/>
            <context ref="line-comment"/>
            <context ref="assignment-operator"/>
            <context ref="reserved-classes" />
            <context ref="reserved-modules" />
            <context ref="type"/>
            <context ref="include"/>
			<context ref="def:escape"/>
			<context ref="scope-declaration"/>
			<context ref="string"/>
			<context ref="control-start"/>
			<context ref="control-middle"/>
			<context ref="control-end"/>
			<context ref="special-functions"/>
			<context ref="close-comment-outside-comment"/>
			<context ref="operator"/>
			<context ref="boolean-evaluations"/>
			<context ref="keyword"/>
          </include>
        </context>
        
    </definitions>
 </language>
